package main

type AboutParams struct {
	HeadParams
}

templ aboutTemplate(params AboutParams) {
        <!DOCTYPE html>
        <html class="theme--default font-light" lang={ params.HeadParams.Lang } if isRTL(ctx) { dir="rtl" }>
                <meta charset="UTF-8"/>
		<head>
                        <title>{ t(ctx, "about.title") }</title>
			<meta name="description" content=""/>
			@headCommonTemplate(params.HeadParams)
		</head>
		<body class="mb-16 bg-white text-gray-600 dark:bg-neutral-900 dark:text-neutral-50 print:text-black">
			@topTemplate(params.HeadParams)
			<div class="mx-auto sm:mt-8 block px-4 sm:flex sm:items-center sm:justify-center sm:px-0">
				<div class="w-full max-w-screen-2xl justify-between gap-10 overflow-visible print:w-full sm:flex sm:w-11/12 sm:px-4 md:w-10/12 lg:w-9/12">
					<div>
						<h2 class="text-2xl text-strongpink">{ t(ctx, "about.what.title") }</h2>
						<p class="my-3 leading-5">
							@templ.Raw(t(ctx, "about.what.description"))
						</p>
						<p class="my-3 leading-5">
							@templ.Raw(tWithData(ctx, "about.usage.description", map[string]any{"Domain": s.Domain}))
						</p>
						<p class="my-3 leading-5">
							@templ.Raw(t(ctx, "about.examples.description"))
						</p>
						<h2 class="text-xl text-strongpink">
							{ t(ctx, "about.try.title") }
						</h2>
						<div
							class="my-3 mb-8 rounded-lg bg-zinc-100 p-4 pb-3 dark:bg-neutral-900 sm:p-6 sm:pb-4"
						>
							<form
								_="on submit halt the event's default then go to url `/${event.target.code.value}`"
							>
								<div
									class="flex flex-wrap items-center justify-center sm:flex-nowrap sm:justify-normal"
								>
									<div class="mb-1.5 text-xl sm:mb-0">{ s.Domain }/</div>
									<input
										name="code"
										placeholder={ t(ctx, "about.try.placeholder") }
										autofocus
										class="ml-0 w-full basis-full rounded-lg border-0 bg-white p-2 text-base text-gray-700 placeholder:text-gray-300 focus:outline-0 dark:bg-zinc-900 dark:text-neutral-50 dark:placeholder:text-gray-400 sm:ml-1 sm:basis-11/12 sm:rounded-s-lg"
									/>
									<button
										class="ml-0 w-full basis-full rounded-lg border-0 bg-strongpink p-2 text-base uppercase text-white sm:-ml-4 sm:basis-2/12 sm:rounded-s-lg"
									>
										{ t(ctx, "about.try.button") }
									</button>
								</div>
							</form>
							<div class="mt-3 text-center text-sm sm:mt-1 sm:text-left">
								{ t(ctx, "about.try.or") }
								<a
									class="underline"
									href="/random"
									_="on click halt the event then fetch /random with method:'POST' then tell <input[name='code'] /> set @value to result"
								>
									{ t(ctx, "about.try.random") }
								</a>
							</div>
						</div>
						<p class="my-3 leading-5">
							{ t(ctx, "about.reasons.intro") }
						</p>
						<h2 class="mt-7 text-2xl text-strongpink">{ t(ctx, "about.reasons.clean.title") }</h2>
						<p class="my-3 leading-5">
							{ t(ctx, "about.reasons.clean.desc") }
						</p>
						<h2 class="mt-7 text-2xl text-strongpink">{ t(ctx, "about.reasons.previews.title") }</h2>
						<p class="my-3 leading-5">
							{ t(ctx, "about.reasons.previews.desc") }
						</p>
						<p class="my-3 leading-5">
							{ t(ctx, "about.reasons.browser.title") }
						</p>
						<h2 class="mt-7 text-2xl text-strongpink">{ t(ctx, "about.reasons.cooperative.title") }</h2>
						<p class="my-3 leading-5">
							{ t(ctx, "about.reasons.cooperative.desc") }
						</p>
						<p class="my-3 leading-5">
							<a class="underline" href="https://github.com/nostr-protocol/nips/blob/master/89.md">NIP-89</a>
							{ t(ctx, "about.reasons.nip89.title") }
						</p>
						<h2 class="mt-7 text-2xl text-strongpink">
							{ t(ctx, "about.reasons.seo.title") }
						</h2>
						<p class="my-3 leading-5">
							{ t(ctx, "about.reasons.seo.desc") }
						</p>
						<h2 class="mt-7 text-2xl text-strongpink">{ t(ctx, "about.nip05.title") }</h2>
						<p class="my-3 leading-5">
							@templ.Raw(tWithData(ctx, "about.nip05_description", map[string]any{"Domain": s.Domain}))
						</p>
						<p class="my-3 leading-5">
							{ t(ctx, "about.profile.shows") }
						</p>
						<h2 class="mt-7 text-2xl text-strongpink">
							{ t(ctx, "about.social.title") }
						</h2>
						<p class="my-3 leading-5">
							{ t(ctx, "about.social.desc") }
						</p>
						<h2 class="mt-7 text-2xl text-strongpink">{ t(ctx, "about.relay_views") }</h2>
						<p class="my-3 leading-5">
							@templ.Raw(tWithData(ctx, "about.relay_description", map[string]any{"Domain": s.Domain}))
						</p>
						<p class="my-3 leading-5">
							@templ.Raw(t(ctx, "about.relay_info"))
						</p>
						<h2 class="mt-7 text-2xl text-strongpink">{ t(ctx, "about.website_widgets") }</h2>
						<div class="my-3 leading-5">
							@templ.Raw(tWithData(ctx, "about.widgets_full_description", map[string]any{"Domain": s.Domain}))
						</div>
						<div class="my-3 leading-5">
							<div class="mt-4 gap-8 sm:flex">
								<div class="mb-4 flex-auto sm:mb-0">
									<script src="/embed/npub1sn0wdenkukak0d9dfczzeacvhkrgz92ak56egt7vdgzn8pv2wfqqhrjdv9"></script>
								</div>
								<div class="flex-auto">
									<script src="/embed/naddr1qqxnzd3cxqmrzv3exgmr2wfeqy08wumn8ghj7mn0wd68yttsw43zuam9d3kx7unyv4ezumn9wshszyrhwden5te0dehhxarj9ekk7mf0qy88wumn8ghj7mn0wvhxcmmv9uq3zamnwvaz7tmwdaehgu3wwa5kuef0qy2hwumn8ghj7un9d3shjtnwdaehgu3wvfnj7q3qdergggklka99wwrs92yz8wdjs952h2ux2ha2ed598ngwu9w7a6fsxpqqqp65wy2vhhv"></script>
								</div>
							</div>
						</div>
						<h2 class="mt-7 text-2xl text-strongpink">{ t(ctx, "about.inspector_tool") }</h2>
						<p class="my-3 leading-5">
							@templ.Raw(t(ctx, "about.inspector_description"))
						</p>
					</div>
				</div>
			</div>
			@footerTemplate()
		</body>
	</html>
}
